/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './contextmenu';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import11 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import12 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import13 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/core/src/linker/template_ref';
import * as import16 from '@angular/common/src/directives/ng_for';
import * as import17 from '@angular/common/src/directives/ng_class';
import * as import18 from '@angular/core/src/security';
export class Wrapper_SemanticContextMenuComponent {
  /*private*/ _eventHandler:Function;
  context:import0.SemanticContextMenuComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor() {
    this._changed = false;
    this.context = new import0.SemanticContextMenuComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_items(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.items = currValue;
      this._expr_0 = currValue;
    }
  }
  check_position(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.position = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'document:click')) {
      const pd_sub_0:any = ((<any>this.context.clickedOutside()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_SemanticContextMenuComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_SemanticContextMenuComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.SemanticContextMenuComponent>;
  _SemanticContextMenuComponent_0_3:Wrapper_SemanticContextMenuComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SemanticContextMenuComponent_Host0,renderType_SemanticContextMenuComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'sm-contextmenu',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_SemanticContextMenuComponent0(this.viewUtils,this,0,this._el_0);
    this._SemanticContextMenuComponent_0_3 = new Wrapper_SemanticContextMenuComponent();
    this.compView_0.create(this._SemanticContextMenuComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click','document'),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._SemanticContextMenuComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.SemanticContextMenuComponent) && (0 === requestNodeIndex))) { return this._SemanticContextMenuComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._SemanticContextMenuComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._SemanticContextMenuComponent_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const SemanticContextMenuComponentNgFactory:import8.ComponentFactory<import0.SemanticContextMenuComponent> = new import8.ComponentFactory<import0.SemanticContextMenuComponent>('sm-contextmenu',View_SemanticContextMenuComponent_Host0,import0.SemanticContextMenuComponent);
const styles_SemanticContextMenuComponent:any[] = ['.sm-contextmenu[_ngcontent-%COMP%] { position: fixed; z-index: 1000; }'];
class View_SemanticContextMenuComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_SemanticContextMenuComponent1,renderType_SemanticContextMenuComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'a',new import3.InlineArray2(2,'class','item'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'i',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4:any = import3.inlineInterpolate(1,'',this.context.$implicit.icon,' icon');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementProperty(this._el_2,'className',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = import3.inlineInterpolate(1,'\n ',this.context.$implicit.title,'\n ');
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_3,currVal_5);
      this._expr_5 = currVal_5;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.$implicit.action()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_SemanticContextMenuComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_SemanticContextMenuComponent,{});
export class View_SemanticContextMenuComponent0 extends import2.AppView<import0.SemanticContextMenuComponent> {
  _el_0:any;
  _NgClass_0_3:import10.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _NgClass_2_3:import10.Wrapper_NgClass;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import9.ViewContainer;
  _TemplateRef_4_5:any;
  _NgFor_4_6:import11.Wrapper_NgFor;
  _text_5:any;
  _text_6:any;
  _text_7:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  _map_15:any;
  _map_16:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SemanticContextMenuComponent0,renderType_SemanticContextMenuComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce);
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
    this._map_15 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'active visible': p0};
    });
    this._map_16 = import3.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'visible animating slide down in': p0,
        hidden: p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','ui dropdown sm-contextmenu'),(null as any));
    this._NgClass_0_3 = new import10.Wrapper_NgClass(this.parentView.injectorGet(import12.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import13.KeyValueDiffers,this.parentIndex),new import14.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','ui menu transition'),(null as any));
    this._NgClass_2_3 = new import10.Wrapper_NgClass(this.parentView.injectorGet(import12.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import13.KeyValueDiffers,this.parentIndex),new import14.ElementRef(this._el_2),this.renderer);
    this._text_3 = this.renderer.createText(this._el_2,'\n ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_4 = new import9.ViewContainer(4,2,this,this._anchor_4);
    this._TemplateRef_4_5 = new import15.TemplateRef_(this,4,this._anchor_4);
    this._NgFor_4_6 = new import11.Wrapper_NgFor(this._vc_4.vcRef,this._TemplateRef_4_5,this.parentView.injectorGet(import12.IterableDiffers,this.parentIndex),this.ref);
    this._text_5 = this.renderer.createText(this._el_2,'\n ',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._text_6,
      this._text_7
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import16.NgFor) && (4 === requestNodeIndex))) { return this._NgFor_4_6.context; }
    if (((token === import17.NgClass) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._NgClass_2_3.context; }
    if (((token === import17.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'ui dropdown sm-contextmenu';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this._map_15(this.context.show);
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = 'ui menu transition';
    this._NgClass_2_3.check_klass(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this._map_16(this.context.show,!this.context.show);
    this._NgClass_2_3.check_ngClass(currVal_2_0_1,throwOnChange,false);
    this._NgClass_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_4_0_0:any = this.context.items;
    this._NgFor_4_6.check_ngForOf(currVal_4_0_0,throwOnChange,false);
    this._NgFor_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    const currVal_13:any = ((this.context._position == null)? (null as any): this.context._position.x);
    if (import3.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementStyle(this._el_0,'left',((this.viewUtils.sanitizer.sanitize(import18.SecurityContext.STYLE,currVal_13) == null)? (null as any): (this.viewUtils.sanitizer.sanitize(import18.SecurityContext.STYLE,currVal_13).toString() + 'px')));
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = ((this.context._position == null)? (null as any): this.context._position.y);
    if (import3.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementStyle(this._el_0,'top',((this.viewUtils.sanitizer.sanitize(import18.SecurityContext.STYLE,currVal_14) == null)? (null as any): (this.viewUtils.sanitizer.sanitize(import18.SecurityContext.STYLE,currVal_14).toString() + 'px')));
      this._expr_14 = currVal_14;
    }
  }
  destroyInternal():void {
    this._vc_4.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 4)) { return new View_SemanticContextMenuComponent1(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    return (null as any);
  }
}