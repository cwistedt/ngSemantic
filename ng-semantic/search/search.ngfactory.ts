/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './search';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/view_container';
import * as import10 from '../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import12 from '../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_directive.ngfactory';
import * as import13 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import14 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/forms/src/directives/default_value_accessor';
import * as import20 from '@angular/forms/src/directives/control_value_accessor';
import * as import21 from '@angular/forms/src/directives/reactive_directives/form_control_directive';
import * as import22 from '@angular/forms/src/directives/ng_control';
import * as import23 from '@angular/forms/src/directives/ng_control_status';
import * as import24 from '@angular/common/src/directives/ng_if';
import * as import25 from '@angular/common/src/directives/ng_class';
export class Wrapper_SemanticSearchComponent {
  /*private*/ _eventHandler:Function;
  context:import0.SemanticSearchComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.SemanticSearchComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_class(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.class = currValue;
      this._expr_0 = currValue;
    }
  }
  check_icon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.icon = currValue;
      this._expr_1 = currValue;
    }
  }
  check_loading(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.loading = currValue;
      this._expr_2 = currValue;
    }
  }
  check_debounce(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.debounce = currValue;
      this._expr_3 = currValue;
    }
  }
  check_placeholder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.placeholder = currValue;
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onSearch.subscribe(_eventHandler.bind(view,'onSearch'))); }
  }
}
var renderType_SemanticSearchComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_SemanticSearchComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.SemanticSearchComponent>;
  _SemanticSearchComponent_0_3:Wrapper_SemanticSearchComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SemanticSearchComponent_Host0,renderType_SemanticSearchComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'sm-search',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_SemanticSearchComponent0(this.viewUtils,this,0,this._el_0);
    this._SemanticSearchComponent_0_3 = new Wrapper_SemanticSearchComponent();
    this.compView_0.create(this._SemanticSearchComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._SemanticSearchComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.SemanticSearchComponent) && (0 === requestNodeIndex))) { return this._SemanticSearchComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._SemanticSearchComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._SemanticSearchComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._SemanticSearchComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const SemanticSearchComponentNgFactory:import8.ComponentFactory<import0.SemanticSearchComponent> = new import8.ComponentFactory<import0.SemanticSearchComponent>('sm-search',View_SemanticSearchComponent_Host0,import0.SemanticSearchComponent);
const styles_SemanticSearchComponent:any[] = ([] as any[]);
class View_SemanticSearchComponent1 extends import2.AppView<any> {
  _el_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import9.ViewContainer) {
    super(View_SemanticSearchComponent1,renderType_SemanticSearchComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'i',new import3.InlineArray2(2,'class','search icon'),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_SemanticSearchComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_SemanticSearchComponent,{});
export class View_SemanticSearchComponent0 extends import2.AppView<import0.SemanticSearchComponent> {
  _el_0:any;
  _NgClass_0_3:import10.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _DefaultValueAccessor_4_3:import11.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_4_4:any[];
  _FormControlDirective_4_5:import12.Wrapper_FormControlDirective;
  _NgControl_4_6:any;
  _NgControlStatus_4_7:import13.Wrapper_NgControlStatus;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import9.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import14.Wrapper_NgIf;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _map_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SemanticSearchComponent0,renderType_SemanticSearchComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce);
    this._map_20 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {loading: p0};
    });
    this._expr_21 = import1.UNINITIALIZED;
    this._expr_22 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','ui search'),(null as any));
    this._NgClass_0_3 = new import10.Wrapper_NgClass(this.parentView.injectorGet(import15.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import16.KeyValueDiffers,this.parentIndex),new import17.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'input',new import3.InlineArray4(4,'class','prompt','type','text'),(null as any));
    this._DefaultValueAccessor_4_3 = new import11.Wrapper_DefaultValueAccessor(this.renderer,new import17.ElementRef(this._el_4));
    this._NG_VALUE_ACCESSOR_4_4 = [this._DefaultValueAccessor_4_3.context];
    this._FormControlDirective_4_5 = new import12.Wrapper_FormControlDirective((null as any),(null as any),this._NG_VALUE_ACCESSOR_4_4);
    this._NgControl_4_6 = this._FormControlDirective_4_5.context;
    this._NgControlStatus_4_7 = new import13.Wrapper_NgControlStatus(this._NgControl_4_6);
    this._text_5 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2,(null as any));
    this._vc_6 = new import9.ViewContainer(6,2,this,this._anchor_6);
    this._TemplateRef_6_5 = new import18.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import14.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_8 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','results'),(null as any));
    this._text_10 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_4));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.DefaultValueAccessor) && (4 === requestNodeIndex))) { return this._DefaultValueAccessor_4_3.context; }
    if (((token === import20.NG_VALUE_ACCESSOR) && (4 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_4_4; }
    if (((token === import21.FormControlDirective) && (4 === requestNodeIndex))) { return this._FormControlDirective_4_5.context; }
    if (((token === import22.NgControl) && (4 === requestNodeIndex))) { return this._NgControl_4_6; }
    if (((token === import23.NgControlStatus) && (4 === requestNodeIndex))) { return this._NgControlStatus_4_7.context; }
    if (((token === import18.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import24.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import25.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'ui search';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this._map_20(this.context.loading);
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._DefaultValueAccessor_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_4_1_0:any = this.context.searchControl;
    this._FormControlDirective_4_5.check_form(currVal_4_1_0,throwOnChange,false);
    this._FormControlDirective_4_5.ngDoCheck(this,this._el_4,throwOnChange);
    this._NgControlStatus_4_7.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_6_0_0:any = this.context.icon;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    const currVal_21:any = import3.inlineInterpolate(1,'ui icon input ',this.context.class,' ');
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementProperty(this._el_2,'className',currVal_21);
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = this.context.placeholder;
    if (import3.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementAttribute(this._el_4,'placeholder',((currVal_22 == null)? (null as any): currVal_22.toString()));
      this._expr_22 = currVal_22;
    }
    this._NgControlStatus_4_7.checkHost(this,this,this._el_4,throwOnChange);
  }
  destroyInternal():void {
    this._vc_6.destroyNestedViews();
    this._FormControlDirective_4_5.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 6)) { return new View_SemanticSearchComponent1(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_4_3.handleEvent(eventName,$event) && result);
    return result;
  }
}